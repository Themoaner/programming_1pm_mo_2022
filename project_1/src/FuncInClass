#include <SFML/Graphics.hpp>
#include "Header.h"

namespace sk
{
	Player::Player(sf::String F, float X, float Y, float W, float H)
	{
		SetPlayer(X, Y, W, H);
		File = F;
		image.loadFromFile("images/" + File);
		texture.loadFromImage(image);
		sprite.setTexture(texture);
		sprite.setTextureRect(sf::IntRect(0, 0, w, h));
	}

	void Player::SetPlayer(float X, float Y, float W, float H)
	{
		x = X;
		y = Y;
		w = W;
		h = H;
	}

	void Player::update(float time)
	{
		switch (direction)
		{
		case 0: dx = speed; dy = 0; break;
		case 1: dx = -speed; dy = 0; break;
		case 2: dx = 0; dy = speed; break;
		case 3: dx = 0; dy = -speed; break;
		}

		x += dx * time;
		y += dy * time;

		speed = 0;
		sprite.setPosition(x, y);
		interactionWithMap();
	}

	void Player::interactionWithMap()
	{
		for (int i = y / 100; i < (y + h) / 100; i++)
		{
			for (int j = x / 100; j < (x + w) / 100; j++)
			{
				if (TileMap[i][j] == '1' || TileMap[i][j] == 's' || TileMap[i][j] == 'w')
				{
					if (dy > 0)
						y = i * 100 - h;
					if (dy < 0)
						y = i * 100 + 100;
					if (dx > 0)
						x = j * 100 - w;
					if (dx < 0)
						x = j * 100 + 100;
				}
			}
		}
	}



	Boat::Boat(sf::String F, float X, float Y, float W, float H)
	{
		SetBoat(X, Y, W, H);
		dx = 0.1;
		File = F;
		image.loadFromFile("images/" + File);
		texture.loadFromImage(image);
		sprite.setTexture(texture);
		sprite.setTextureRect(sf::IntRect(0, 0, w, h));
	}

	void Boat::SetBoat(float X, float Y, float W, float H)
	{
		x = X;
		y = Y;
		w = W;
		h = H;
	}

	void Boat::update(float time)
	{
		moveTimer += time;

		if (moveTimer > 10000)
		{
			dx *= -1;
			moveTimer = 0;
		}
		x += dx * time;
		sprite.setPosition(x, y);
	}
}
